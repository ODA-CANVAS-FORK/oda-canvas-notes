apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    meta.helm.sh/release-name: istio-ingress
    meta.helm.sh/release-namespace: istio-ingress
  creationTimestamp: "2024-11-22T15:43:12Z"
  generation: 15
  labels:
    app: istio-ingress
    app.kubernetes.io/instance: istio-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingress
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: gateway-1.24.0
    istio: ingressgateway
  name: istio-ingress
  namespace: istio-ingress
  resourceVersion: "241332049"
  uid: cc2ad401-d5ec-4a6d-914a-67510253a1e6
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: istio-ingress
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
        kubectl.kubernetes.io/restartedAt: "2024-11-22T21:21:08+01:00"
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        app: istio-ingress
        app.kubernetes.io/instance: istio-ingress
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: istio-ingress
        app.kubernetes.io/part-of: istio
        app.kubernetes.io/version: 1.24.0
        helm.sh/chart: gateway-1.24.0
        istio: ingressgateway
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - image: auto
        imagePullPolicy: Always
        name: istio-proxy
        ports:
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config_map/oauth2secs
          name: oauth2secs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        sysctls:
        - name: net.ipv4.ip_unprivileged_port_start
          value: "0"
      serviceAccount: istio-ingress
      serviceAccountName: istio-ingress
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: oauth2secs-cm
        name: oauth2secs
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-11-22T19:23:01Z"
    lastUpdateTime: "2024-11-22T19:23:01Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-11-22T15:43:12Z"
    lastUpdateTime: "2024-11-22T20:21:08Z"
    message: ReplicaSet "istio-ingress-548bdfcc57" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 15
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1