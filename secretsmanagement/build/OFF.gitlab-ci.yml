variables:
  
  SMAN_SIDECAR_VERSION: 0.1.0-rc
  SMAN_OPERATOR_VERSION: 0.1.0-rc
  DEPAPI_OPERATOR_VERSION: 0.1.1-rc
  COMPISTIOCTLR_VERSION: 0.4.2-sman
  CODESERVER_VERSION: 4.22.0
  
  SMAN_SIDECAR_IMAGE_TAG: secretsmanagement-sidecar-${SMAN_SIDECAR_VERSION}
  SMAN_OPERATOR_IMAGE_TAG: secretsmanagement-operator-${SMAN_OPERATOR_VERSION}
  DEPAPI_OPERATOR_IMAGE_TAG: dependentapi-simple-operator-${DEPAPI_OPERATOR_VERSION}
  COMPISTIOCTLR_IMAGE_TAG: component-istio-controller-${COMPISTIOCTLR_VERSION}
  CODESERVER_IMAGE_TAG: code-server-with-helm-and-node-${CODESERVER_VERSION}

  MAGENTA_TRUSTED_REGISTRY: mtr.devops.telekom.de

  MTR_REPO: magenta_canvas/public
  MTR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}
  MTR_FULL_SMAN_SIDECAR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${SMAN_SIDECAR_IMAGE_TAG}
  MTR_FULL_SMAN_OPERATOR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${SMAN_OPERATOR_IMAGE_TAG}
  MTR_FULL_DEPAPI_OPERATOR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${DEPAPI_OPERATOR_IMAGE_TAG}
  MTR_FULL_CODESERVER_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${CODESERVER_IMAGE_TAG}
  MTR_FULL_COMPISTIOCTLR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${COMPISTIOCTLR_IMAGE_TAG}
  
  DOCKER_REGISTRY_USERNAME: "magenta_canvas+builder"
  #DOCKER_REGISTRY_PASSWORD: "has to be defined in CICD variables"    
  
  SECRET_DETECTION_HISTORIC_SCAN: "true"


include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  # DevSecOps Container Scanner
  # https://gitlab.devops.telekom.de/devsecops-tools/container-scanner/-/blob/master/README.md
  - project: 'devsecops-tools/container-scanner'
    # can be set to a fixed version if one chooses to use a specific version. Default is master.
    ref: "master"
    file: 'container-scan.yml'



stages:
  - build
  - test
  - scan
  - sign



.build_template:
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  stage: 
    build
  script:
    # https://github.com/GoogleContainerTools/kaniko?tab=readme-ov-file#pushing-to-different-registries
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${MAGENTA_TRUSTED_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USERNAME}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --registry-mirror dockerhub.devops.telekom.de
      --context $CI_PROJECT_DIR/$BUILD_FOLDER
      --dockerfile $DOCKERFILE 
      --destination $MTR_FULL_IMAGE
      --build-arg "GIT_COMMIT_SHA=$CI_COMMIT_SHORT_SHA"
      --build-arg "CICD_BUILD_TIME=$CI_JOB_STARTED_AT"


build_sman_sidecar:
  extends: .build_template
  variables:
    BUILD_FOLDER: source/operators/secretsmanagementOperator-hc/sidecar/docker
    DOCKERFILE: $BUILD_FOLDER/Dockerfile 
    MTR_FULL_IMAGE: $MTR_FULL_SMAN_SIDECAR_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - "source/operators/secretsmanagementOperator-hc/sidecar/docker/**/*"
    - when: manual
      allow_failure: true



build_sman_operator:
  extends: .build_template
  variables:
    BUILD_FOLDER: source/operators/secretsmanagementOperator-hc/docker
    DOCKERFILE: $BUILD_FOLDER/Dockerfile 
    MTR_FULL_IMAGE: $MTR_FULL_SMAN_OPERATOR_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - "source/operators/secretsmanagementOperator-hc/docker/**/*"
    - when: manual
      allow_failure: true


build_depapi_operator:
  extends: .build_template
  variables:
    BUILD_FOLDER: source/operators/dependentApiSimpleOperator/docker
    DOCKERFILE: $BUILD_FOLDER/Dockerfile 
    MTR_FULL_IMAGE: $MTR_FULL_DEPAPI_OPERATOR_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - "source/operators/dependentApiSimpleOperator/docker/**/*"
    - when: manual
      allow_failure: true


build_compistioctlr:
  extends: .build_template
  variables:
    BUILD_FOLDER: source/operators
    DOCKERFILE: $BUILD_FOLDER/component-IstioController-dockerfile 
    MTR_FULL_IMAGE: $MTR_FULL_COMPISTIOCTLR_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - source/operators/component-IstioController-dockerfile
      - "source/operators/componentOperator/**/*"
      - "source/operators/apiOperatorIstio/**/*"
      - "source/operators/securityController/**/*"
    - when: manual
      allow_failure: true


.build_template_docker:
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: 'dockerhub.devops.telekom.de/docker:dind'
      command: ['--tls=false', '--host=tcp://0.0.0.0:2375', '--registry-mirror=https://dockerhub.devops.telekom.de']
      alias: docker
  image: docker:20.10.6
  tags:
    - otc_run_sysbox_s
  script:
    - docker login --username=$DOCKER_REGISTRY_USERNAME --password=$DOCKER_REGISTRY_PASSWORD $MAGENTA_TRUSTED_REGISTRY
    - cd $BUILD_FOLDER
    - docker build -f $DOCKERFILE -t $MTR_FULL_IMAGE --build-arg "GIT_COMMIT_SHA=$CI_COMMIT_SHORT_SHA" --build-arg "CICD_BUILD_TIME=$CI_JOB_STARTED_AT" . 
    - docker push $MTR_FULL_IMAGE


build_codeserver:
  extends: .build_template_docker
  variables:
    BUILD_FOLDER: TEMP/code-server/code-server-with-helm-and-node
    DOCKERFILE: Dockerfile 
    MTR_FULL_IMAGE: $MTR_FULL_CODESERVER_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - "TEMP/code-server/code-server-with-helm-and-node/**/*"
    - when: manual
      allow_failure: true




.scan_template:
  extends: .container_scan
  stage: scan
  variables:
    SCAN_REGISTRY: ${MAGENTA_TRUSTED_REGISTRY}
    SCAN_REGISTRY_IMAGE: ${MTR_IMAGE}
    SCAN_REGISTRY_TAG: ${IMAGE_TAG}
    SCAN_REGISTRY_USER: ${DOCKER_REGISTRY_USERNAME}
    SCAN_REGISTRY_PASSWORD: "${DOCKER_REGISTRY_PASSWORD}"
    MAX_SEVERITY: critical
    FAIL_PIPELINE: "false"
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - scanresults/*


scan_sman_sidecar:
  extends: .scan_template
  variables:
    IMAGE_TAG: $SMAN_SIDECAR_IMAGE_TAG
  needs:
    - build_sman_sidecar

scan_sman_operator:
  extends: .scan_template
  variables:
    IMAGE_TAG: $SMAN_OPERATOR_IMAGE_TAG
  needs:
    - build_sman_operator

scan_depapi_operator:
  extends: .scan_template
  variables:
    IMAGE_TAG: $DEPAPI_OPERATOR_IMAGE_TAG
  needs:
    - build_depapi_operator

scan_compistioctlr:
  extends: .scan_template
  variables:
    IMAGE_TAG: $COMPISTIOCTLR_IMAGE_TAG
  needs:
    - build_compistioctlr


# problems scanning with dev-sec-ops scanner, set to manual. Error-Message: 
#   failed to catalog: unable to load image: unable to use DockerDaemon source: pull failed: 
#     Error response from daemon: manifest for mtr.devops.telekom.de/magenta_canvas/public:code-server-with-helm-and-node-4.22.0 not found: 
#       manifest unknown: manifest unknown
scan_codeserver:
  extends: .scan_template
  variables:
    IMAGE_TAG: $CODESERVER_IMAGE_TAG
  needs:
    - build_codeserver
  rules:
    - when: manual
      allow_failure: true


.sign_template:
  stage: sign
  image: dockerhub.devops.telekom.de/bitnami/cosign
  script:
    # echo setup credentials for MTR with access to repository
    - export DOCKER_CONFIG=$(pwd)/.docker
    - mkdir -p $DOCKER_CONFIG
    - echo "{\"auths\":{\"${MAGENTA_TRUSTED_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USERNAME}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}"  > $DOCKER_CONFIG/config.json
    # sign with private key
    # the environment variable COSIGN_PASSWORD has to be set in CICD variables!
    - cosign sign --tlog-upload=false --key $COSIGN_PRIVATE_KEY $MTR_FULL_IMAGE


sign_sman_sidecar:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_SMAN_SIDECAR_IMAGE
  needs:
    - scan_sman_sidecar

sign_sman_operator:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_SMAN_OPERATOR_IMAGE
  needs:
    - scan_sman_operator

sign_depapi_operator:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_DEPAPI_OPERATOR_IMAGE
  needs:
    - scan_depapi_operator

sign_compistioctlr:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_COMPISTIOCTLR_IMAGE
  needs:
    - scan_compistioctlr
    

sign_codeserver:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_CODESERVER_IMAGE
  needs:
    #- scan_codeserver
    - build_codeserver

